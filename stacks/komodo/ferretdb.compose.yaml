#################################
# ðŸ¦Ž KOMODO COMPOSE - SQLITE ðŸ¦Ž #
#################################

## This compose file will deploy:
##   1. Sqlite + FerretDB Mongo adapter (https://www.ferretdb.com)
##   2. Komodo Core
##   3. Komodo Periphery

services:

#  ferretdb:
#    image: ghcr.io/ferretdb/ferretdb:1
#    labels:
#      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
#    restart: unless-stopped
#    logging:
#      driver: ${COMPOSE_LOGGING_DRIVER:-local}
#    # ports:
#    #   - 27017:27017
#    volumes:
#      - sqlite-data:/state
#    environment:
#      - FERRETDB_HANDLER=sqlite
#    networks:
#      - default
#
#  copy_database:
#    image: ghcr.io/moghtech/komodo-util
#    environment:
#      MODE: CopyDatabase
#      SOURCE_URI: mongodb://ferretdb:27017
#      SOURCE_DB_NAME: ${KOMODO_DATABASE_DB_NAME:-komodo}
#      TARGET_URI: mongodb://${KOMODO_DB_USERNAME}:${KOMODO_DB_PASSWORD}@ferretdb2:27017
#      TARGET_DB_NAME: ${KOMODO_DATABASE_DB_NAME:-komodo}
#    networks:
#      - default
#    env_file: ./compose.env

  postgres2:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/documentdb/pkgs/container/postgres-documentdb
    image: ghcr.io/ferretdb/postgres-documentdb
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    # ports:
    #   - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${KOMODO_DB_USERNAME}
      POSTGRES_PASSWORD: ${KOMODO_DB_PASSWORD}
      POSTGRES_DB: postgres # Do not change
    networks:
      - default
    env_file: ./compose.env

  ferretdb2:
    # Recommended: Pin to a specific version
    # https://github.com/FerretDB/FerretDB/pkgs/container/ferretdb
    image: ghcr.io/ferretdb/ferretdb
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - postgres2
    # ports:
    #   - 27017:27017
    volumes:
      - ferretdb-state:/state
    environment:
      FERRETDB_POSTGRESQL_URL: postgres://${KOMODO_DB_USERNAME}:${KOMODO_DB_PASSWORD}@postgres2:5432/postgres
    networks:
      - default
    env_file: ./compose.env

  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - ferretdb2
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    ports:
      - 9120:9120
    env_file: ./compose.env

    environment:
      KOMODO_DATABASE_ADDRESS: ferretdb2:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}

    networks:
      - default
      - hanwg.top

    volumes:
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache

      ## Store sync files on server
      # - /path/to/syncs:/syncs

      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml

    ## Allows for systemd Periphery connection at
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway


  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using
  ## https://github.com/moghtech/komodo/tree/main/scripts

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    env_file: ./compose.env
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock

      ## Allow Periphery to see processes outside of container
      - /proc:/proc

      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
    networks:
      - default
      - hanwg.top

volumes:
  # Sqlite
  # sqlite-data:

  # Core
  repo-cache:

  postgres-data:
  ferretdb-state:

networks:
  default:
  hanwg.top:
    external: true
